//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Order_Application_Admin.FeedbackReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost/feedbacks.asmx/", ConfigurationName="FeedbackReference.FeedbacksSoap")]
    public interface FeedbacksSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/feedbacks.asmx/viewFeedbacks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable viewFeedbacks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/feedbacks.asmx/viewFeedbacks", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> viewFeedbacksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/feedbacks.asmx/getUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getUsername(string feedbackID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/feedbacks.asmx/getUsername", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getUsernameAsync(string feedbackID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/feedbacks.asmx/addAdminFeedback", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int addAdminFeedback(string username, string feedback);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/feedbacks.asmx/addAdminFeedback", ReplyAction="*")]
        System.Threading.Tasks.Task<int> addAdminFeedbackAsync(string username, string feedback);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FeedbacksSoapChannel : Order_Application_Admin.FeedbackReference.FeedbacksSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeedbacksSoapClient : System.ServiceModel.ClientBase<Order_Application_Admin.FeedbackReference.FeedbacksSoap>, Order_Application_Admin.FeedbackReference.FeedbacksSoap {
        
        public FeedbacksSoapClient() {
        }
        
        public FeedbacksSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FeedbacksSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedbacksSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedbacksSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable viewFeedbacks() {
            return base.Channel.viewFeedbacks();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> viewFeedbacksAsync() {
            return base.Channel.viewFeedbacksAsync();
        }
        
        public string getUsername(string feedbackID) {
            return base.Channel.getUsername(feedbackID);
        }
        
        public System.Threading.Tasks.Task<string> getUsernameAsync(string feedbackID) {
            return base.Channel.getUsernameAsync(feedbackID);
        }
        
        public int addAdminFeedback(string username, string feedback) {
            return base.Channel.addAdminFeedback(username, feedback);
        }
        
        public System.Threading.Tasks.Task<int> addAdminFeedbackAsync(string username, string feedback) {
            return base.Channel.addAdminFeedbackAsync(username, feedback);
        }
    }
}
